BROKER SCHEMA Error

DECLARE ens NAMESPACE 'http://www.esb.ibm.com/iib/framework/exception';
-- DECLARE UDP variables
DECLARE Service_Name EXTERNAL CHARACTER '';
DECLARE Operation_Name EXTERNAL CHARACTER '';
DECLARE Version EXTERNAL CHARACTER '';

CREATE COMPUTE MODULE ErrorHandling_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		DECLARE rOutput REFERENCE TO Environment;
		CREATE LASTCHILD OF OutputRoot AS rOutput DOMAIN 'XMLNSC' NAME 'XMLNSC';
		CREATE LASTCHILD OF rOutput AS rOutput NAMESPACE ens NAME 'Root';
		SET rOutput.Properties = InputProperties;
		SET rOutput.Environment = Environment;
		SET rOutput.ExceptionList = InputExceptionList;
		SET rOutput.Payload = InputBody;
		
		IF NOT(EXISTS(Environment.Var[])) THEN
			DECLARE rEnv REFERENCE TO Environment;
			DECLARE rInv REFERENCE TO Environment;
			CREATE LASTCHILD OF rEnv AS rEnv DOMAIN 'XMLNSC' NAMESPACE 'http://www.esb.ibm.com/iib/framework/environment' NAME 'ESB';
			CREATE LASTCHILD OF rEnv AS rInv NAME 'Var';
			SET rInv.ServiceName = Service_Name;
			SET rInv.OperationName = Operation_Name;
			SET rInv.Version = Version;
			SET rInv.UniqueTransactionId = COALESCE(InputRoot.Properties.ReplyIdentifier, InputRoot.MQMD.MsgId);
			DECLARE rInput REFERENCE TO rInv.Log.Input;
			DECLARE cPrefix CHAR Service_Name || '_' || Operation_Name || '_' || Version;
			SET rInput.InputName = cPrefix || '_Input';
			SET rInput.ReplyName = cPrefix || '_Reply';
			SET rInput.ErrorName = cPrefix || '_Error';
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;